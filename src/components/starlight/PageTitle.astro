---
import Default from "@astrojs/starlight/components/PageTitle.astro";
let { synonyms = [] } = Astro.locals.starlightRoute.entry.data || {};


---



<Default><slot /></Default>
{
  synonyms.length > 0 && (
    <div style="margin-top: 1rem; display: flex; gap: 0.5rem; flex-wrap: wrap;">
      {synonyms.map((synonym: string) => (
        <span
          style="
                    background: #e0e0e0;
                    border-radius: 16px;
                    padding: 0.25em 0.75em;
                    font-size: 0.95em;
                    color: #333;
                    display: inline-block;
                    cursor: pointer;
                    data-synonym={synonym}
                "
        >
          {synonym}
        </span>
      ))}
    </div>
  )
}
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const synonymContainer = document.querySelector(
      'div[style*="display: flex;"]'
    ); // Select the container
    if (synonymContainer) {
      synonymContainer.addEventListener("click", (e) => {
        const target = e.target;
        console.log("Synonym clicked:", target?.textContent);
       
        if (target && target.hasAttribute("data-synonym")) {
            // Simulate Ctrl+K and write the textContent
            const synonym = target.textContent;
            const textarea = document.querySelector("textarea, input[type='text']");
            if (textarea) {
                textarea.focus();
                // Simulate Ctrl+K (commonly used for link insertion in editors)
                const event = new KeyboardEvent("keydown", {
                    key: "k",
                    code: "KeyK",
                    ctrlKey: true,
                    bubbles: true,
                });
                textarea.dispatchEvent(event);
                // Insert the synonym text (simulate typing)
                document.execCommand("insertText", false, synonym);
            }
        }

    });
    }
  });

</script>